## ‚úÖ Installed Tools and Environment Summary with Commands and Explanations

### üß† Context

This document summarizes the tools and packages installed on a Linux system configured for robotics development with ROS 1 (Noetic) and ROS 2 (Humble). The setup includes simulation tools, build tools, remote GUI access, and service automation.

---

## üì¶ System Tools Installed

These are the essential system-level tools required to support ROS and simulation development:

```bash
sudo apt install curl gnupg2 lsb-release net-tools vim nano git
```

| Tool        | Description                                        |
| ----------- | -------------------------------------------------- |
| curl        | Used to download files from the internet.          |
| gnupg2      | Required for verifying package signatures.         |
| lsb-release | Provides Linux distribution information.           |
| net-tools   | Legacy utilities like ifconfig.                    |
| vim, nano   | Terminal-based text editors.                       |
| git         | Used for cloning repositories and version control. |

---

## ü§ñ ROS and Robotics Tools

### üîπ ROS 1 ‚Äì Noetic Installation (for Ubuntu 20.04)

```bash
sudo apt update
sudo apt install ros-noetic-desktop-full
```

To initialize your shell environment:

```bash
echo "source /opt/ros/noetic/setup.bash" >> ~/.bashrc
source ~/.bashrc
```

Additional ROS 1 tools:

```bash
sudo apt install python3-catkin-tools python3-rosinstall python3-rosdep
sudo rosdep init
rosdep update
```

To create a workspace:

```bash
mkdir -p ~/catkin_ws/src
cd ~/catkin_ws
catkin_make
```

### üîπ ROS 2 ‚Äì Humble Installation (for Ubuntu 22.04)

```bash
sudo apt update
sudo apt install ros-humble-desktop
```

To set up the shell:

```bash
echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
source ~/.bashrc
```

ROS 2 build and dependency tools:

```bash
sudo apt install -y python3-colcon-common-extensions python3-rosdep
sudo rosdep init
rosdep update
```

To build a ROS 2 workspace:

```bash
mkdir -p ~/ros2_ws/src
cd ~/ros2_ws
colcon build
source install/setup.bash
```

---

## üîß Gazebo Simulation Tools

To install the Gazebo simulator:

```bash
sudo apt install gazebo11 libgazebo11-dev
```

For GUI support and remote desktop:

```bash
sudo apt install xfce4 xfce4-goodies tightvncserver
vncserver
```

---

## üìÅ Project Workspaces

* `~/catkin_ws`: Used for ROS 1 development and simulations.
* `~/ros2_ws`: Used for ROS 2 development with TurtleBot3 and Gazebo.
* `Line-Follower-ROS-GAZEBO`: A custom robot project using ROS and Gazebo.

To clone and use a project:

```bash
cd ~/ros2_ws/src
git clone https://github.com/Utkarsh-Vats-2000/Line-Follower-ROS-GAZEBO.git
cd ~/ros2_ws
colcon build
source install/setup.bash
```

---

## ‚öôÔ∏è Build Tools & Commands

| Tool/Command           | Purpose                                             |
| ---------------------- | --------------------------------------------------- |
| `catkin_make`          | Builds ROS 1 packages in the `catkin_ws` workspace. |
| `colcon build`         | Builds ROS 2 packages in the `ros2_ws` workspace.   |
| `roslaunch` / `rosrun` | Executes ROS 1 launch files or nodes.               |
| `ros2 launch`          | Executes ROS 2 launch files.                        |
| `source setup.bash`    | Sources environment variables to use ROS commands.  |

---

## üîê Services and Autostart

To create a systemd service that launches your ROS node at boot:

```bash
sudo nano /etc/systemd/system/line_follower.service
```

Example contents:

```ini
[Unit]
Description=Line Follower ROS 2 Service
After=network.target

[Service]
ExecStart=/usr/bin/bash -c 'source /opt/ros/humble/setup.bash && source /root/ros2_ws/install/setup.bash && ros2 launch line_follower_gazebo display.launch.py'
Restart=always
User=root

[Install]
WantedBy=multi-user.target
```

Enable and start it:

```bash
sudo systemctl daemon-reload
sudo systemctl enable line_follower.service
sudo systemctl start line_follower.service
```

---

## üåç Remote Access and GUI

Use these tools to access your desktop remotely:

```bash
sudo apt install tightvncserver websockify git
git clone https://github.com/novnc/noVNC.git /opt/novnc
/opt/novnc/utils/launch.sh --vnc localhost:5901
```

Or connect via SSH with X11 forwarding:

```bash
ssh -X your-user@your-gcp-server-ip
```

---

## üßπ Cleanup and Reset Commands

To remove ROS and reset the environment:

```bash
sudo apt purge 'ros-*' -y
sudo rm -rf ~/catkin_ws ~/ros2_ws ~/.ros /opt/ros
sudo apt autoremove -y
```

---

## üìå Environment Variables Set

Add the following to your `~/.bashrc`:

```bash
source /opt/ros/noetic/setup.bash
source /opt/ros/humble/setup.bash
source ~/ros2_ws/install/setup.bash

export TURTLEBOT3_MODEL=waffle
export GAZEBO_RESOURCE_PATH=$GAZEBO_RESOURCE_PATH:/usr/share/gazebo-11.10
export GAZEBO_PLUGIN_PATH=$GAZEBO_PLUGIN_PATH:/usr/lib/x86_64-linux-gnu/gazebo-11/plugins
export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:/usr/share/gazebo-11.10/models
export GAZEBO_HEADLESS=1
```

Apply changes:

```bash
source ~/.bashrc
```

---

This document provides the full list of tools with their installation and usage commands for easy reference and sharing.
